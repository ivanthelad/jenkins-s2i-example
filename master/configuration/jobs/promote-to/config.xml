<?xml version='1.0' encoding='UTF-8'?>
<flow-definition plugin="workflow-job@2.0">
  <actions/>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties>                                                                  
  
    <hudson.model.ParametersDefinitionProperty>                                 
      <parameterDefinitions>                                                    
        <hudson.model.StringParameterDefinition>                                
          <name>targetTag</name>                                                
          <description>Should like something like helloWorld/bla:latest</description>                                           
          <defaultValue>hi</defaultValue>                                         
        </hudson.model.StringParameterDefinition>  
      <hudson.model.StringParameterDefinition>                                
          <name>sourceTag</name>                                            
          <description></description>                                           
          <defaultValue></defaultValue>                                         
        </hudson.model.StringParameterDefinition>                               
      </parameterDefinitions>    
      
    </hudson.model.ParametersDefinitionProperty>
  </properties>        
  <definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps@2.0">
    <script>
      node {
      
      


   // define commands
   def ocCmd = "/usr/bin/oc --token=`cat /var/run/secrets/kubernetes.io/serviceaccount/token` --server=https://openshift.default.svc.cluster.local --certificate-authority=/run/secrets/kubernetes.io/serviceaccount/ca.crt"

   stage 'Start Build '
   echo "Starting Build"
   echo "${targetTag}"
    print "DEBUG: parameter foo = ${targetTag}"
   //sh "${ocCmd} start-build cakephp-example  --follow  --wait=true -n pushed  "
   sh "${ocCmd} describe istag cakephp-example:latest   > result"
   def lines = readFile('result')
   echo "App Succesfully built  based on following Tag information "
   echo "${lines}"

   stage 'TAG Image'
   // tag for stage
   sh "${ocCmd} tag cakephp-example:latest cakephp-example:dev "
   sh "${ocCmd} describe istag cakephp-example:latest | grep commit > commitinfo"
   def lines2 = readFile('commitinfo')
   echo "App Succesfully Tagged  based on following Tag information "
   echo "${lines2}"
   
   stage 'Aprroval Image from Promotion'
   timeout(time: 4, unit: 'HOURS') {
       input message: "Do you want to deploy to production?"
   }
   stage 'Promote STAGE'
   // clean up. keep the imagestream
   //sh "${ocCmd} start-build ruby-sample-build  --follow  --wait=true -n pushed "
   // deploy stage image
   sh "${ocCmd} tag cakephp-example:dev cakephp-example:production "

   echo "Success"
  stage 'Tag Source code '
  echo "TODO, Directly after promotion we should tag the source code in git "

}

def version() {
  def matcher = readFile('pom.xml') =~ '&lt;version&gt;(.+)&lt;/version&gt;'
  matcher ? matcher[0][1] : null
}

</script>
    <sandbox>false</sandbox>
  </definition>
  <triggers/>
</flow-definition>
